---
- hosts: localhost
  connection: local
  gather_facts: no

  roles:
    - role: "avinetworks.avisdk"

  tasks:

    - name: Set variable avi_credentials
      set_fact:
        avi_credentials: >
          {'api_version': "{{ avi_version }}",
           'controller': "{{ avi_controller }}",
           'password': "{{ avi_password }}",
           'username': "admin"}
      when:
        - avi_version is defined
        - avi_controller is defined
        - avi_password is defined

    - name: Defining variable vcenter_configuration - VMW
      set_fact:
        vcenter_configuration:
          username: "{{ avi.cloud.vcenter.username }}"
          password: "{{ vsphere_password }}"
          vcenter_url: "{{ avi.cloud.vcenter.server }}"
          privilege: WRITE_ACCESS
          datacenter: "{{ avi.cloud.vcenter.dc }}"
          management_network: "/api/vimgrnwruntime/?name={{ avi.cloud.vcenter.management_network.name }}"
      when:
        - avi.cloud.vcenter.username is defined
        - vsphere_password is defined
        - avi.cloud.vcenter.server is defined
        - avi.cloud.vcenter.dc is defined
        - avi.cloud.vcenter.management_network.name is defined


    - name: Configure Avi Cloud - VMW
      avi_cloud:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        name:  "{{ avi.cloud.name }}"
        vtype: "{{ avi.cloud.type }}"
        vcenter_configuration: "{{ vcenter_configuration }}"
#        dhcp_enabled: "{{ avi.cloud.vcenter.management_network.dhcp_enabled }}"
      register: output_cloud_vmw
      when:
        - avi.cloud.name is defined
        - avi.cloud.type is defined
        - vcenter_configuration is defined
#        - avi.cloud.vcenter.management_network.dhcp_enabled is defined

    - set_fact:
        cloud_vmw_uuid: "{{ output_cloud_vmw.obj.uuid }}"
      when:
        - output_cloud_vmw is defined
