---
- hosts: localhost
  connection: local
  gather_facts: no

  roles:
    - role: "avinetworks.avisdk"

  tasks:

    - name: Set variable avi_credentials
      set_fact:
        avi_credentials: >
          {'api_version': "{{ avi_version }}",
           'controller': "{{ avi_controller }}",
           'password': "{{ avi_password }}",
           'username': "admin"}
      when:
        - avi_version is defined
        - avi_controller is defined
        - avi_password is defined

    - name: Create Avi DNS provider Without donain names - VMW
      avi_ipamdnsproviderprofile:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        name: "{{ dns.name }}"
        type: IPAMDNS_TYPE_INTERNAL_DNS
      when:
        - dns.name is defined

    - name: Update Avi DNS provider With donain names - VMW
      avi_ipamdnsproviderprofile:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        avi_api_patch_op: add
        avi_api_update_method: patch
        internal_profile:
          dns_service_domain:
            - domain_name: "{{ item.name }}"
              pass_through: true
              record_ttl: 100
          ttl: 300
        name: "{{ dns.name }}"
        type: IPAMDNS_TYPE_INTERNAL_DNS
      loop: "{{ dns.domains }}"
      when:
        - dns.name is defined
        - dns.domains is defined